import models.Basket;
import models.products.Product;

rule "Promotion: 3 Mleka"
when
    milk: Product(name == "Mleko")
    $basket: Basket()
    $count : Integer(intValue == 2) from $basket.countProducts(milk.name)
then
    double discountedPrice = milk.getPrize() * 0.5;
    double totalDiscount = (milk.getPrize() - discountedPrice) * $count;
    milk.setDiscount(discountedPrice);
    $basket.getProduct(milk.getName()).setDiscount(discountedPrice);
    $basket.setTotalAmount($basket.getTotalAmount() - milk.getPrize() + discountedPrice);

    $basket.
end

//rule "Oblicz sumę PLN"
//when
//  $basket: Basket($productList: productList)
//  accumulate(
//    $product: Product() from $productList,
//    $sum: (BigDecimal) calculateTotalAmount($product),
//    $totalAmount: sum($sum))
//then
//  $basket.setTotalAmount($totalAmount);
//end
//
//function BigDecimal calculateTotalAmount(Product $product) {
//  BigDecimal price = $product.getPrice();
//  BigDecimal taxRate = calculateTaxRate($product.getType());
//  BigDecimal taxAmount = price.multiply(taxRate);
//  return price.add(taxAmount);
//}
//
//function BigDecimal calculateTaxRate(String $productType) {
//  // Zdefiniuj logikę obliczania stawki podatku na podstawie typu produktu
//  // Możesz użyć switch, if-else lub innych mechanizmów
//  return BigDecimal.ZERO;
//}